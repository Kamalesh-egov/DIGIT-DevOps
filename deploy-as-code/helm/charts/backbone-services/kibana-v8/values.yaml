# Common Labels
labels:
  app: "kibana-v8"
namespace: es-upgrade

# Ingress Configs
ingress:
  enabled: true
  context: "kibana-v8"

# Init Containers Configs
initContainers: {}

# Container Configs
image:
  repository: "docker.elastic.co/kibana/kibana"
  tag: 8.11.3
  pullPolicy: IfNotPresent
replicas: "1"
httpPort: 5601
elasticsearchHosts: "https://elasticsearch-master-v8:9200"
elasticsearchCertificateSecret: elasticsearch-certs
elasticsearchCertificateAuthoritiesFile: ca.crt
elasticsearchCredentialSecret: elasticsearch-credential
homeDir: "/usr/share/kibana"
serverBasePath: "/kibana-v8"
healthCheckPath: "kibana-v8/app/kibana"
healthChecks:
  enabled: true
  livenessProbePath: "/kibana-v8/"
  readinessProbePath: "/kibana-v8/"            

# Additional Container Envs
env: |
  - name: ELASTICSEARCH_HOSTS
    value: {{ .Values.elasticsearchHosts | quote }}
  - name: SERVER_BASEPATH
    value: {{ .Values.serverBasePath | quote }}
  - name: SERVER_REWRITEBASEPATH
    value: "true"
  - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
    value: "{{ .Values.homeDir }}/config/certs/{{ .Values.elasticsearchCertificateAuthoritiesFile }}"
  - name: ELASTICSEARCH_SERVICEACCOUNTTOKEN
    valueFrom:
      secretKeyRef:
        name: {{ template "name" . }}-es-token
        key: token

extraVolumes: |
  - name: kibana-tokens
    emptyDir: {}
  - name: elasticsearch-certs
    secret:
      secretName: {{ .Values.elasticsearchCertificateSecret }}

extraVolumeMounts: |
  - name: elasticsearch-certs
    mountPath: {{ .Values.homeDir }}/config/certs
    readOnly: true
  - name: kibana-tokens
    mountPath: {{ .Values.homeDir }}/config/tokens
    readOnly: true